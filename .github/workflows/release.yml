name: Release

on:
  workflow_run:
    workflows: ["Build"]
    types: ["completed"]

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            try {
              let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: context.payload.workflow_run.id,
              });
              
              let matchArtifact = allArtifacts.data.artifacts.find((artifact) => artifact.name === "api");

              if (!matchArtifact) {
                throw new Error('Artifact "api" not found.');
              }

              let download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: matchArtifact.id,
                archive_format: 'zip',
              });
              
              let fs = require('fs');
              fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/api.zip`, Buffer.from(download.data));
              console.log('Artifact downloaded successfully.');
            } catch (error) {
              console.error('Error downloading artifact:', error);
              throw error;
            }

      - name: Generate custom tag name
        id: generate_tag
        run: |
          DATE=$(date +'%Y%m%d%H%M%S')
          COMMIT_HASH=$(git rev-parse --short HEAD)
          CUSTOM_TAG="release-${DATE}-${COMMIT_HASH}"
          
          echo "CUSTOM_TAG=${CUSTOM_TAG}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            body: |
              Changes in this Release
              - First Change
              - Second Change
            draft: false
            prerelease: false

      - name: Upload artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./api.zip
          asset_name: api.zip
          asset_content_type: application/zip
